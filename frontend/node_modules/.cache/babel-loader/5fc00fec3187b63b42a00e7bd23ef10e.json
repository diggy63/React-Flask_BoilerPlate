{"ast":null,"code":"import tokenServices from'../../src/Utils/tokenServices';export function getUser(){var token=tokenServices.getToken();if(token){var opts={headers:{'Authorization':'Bearer '+tokenServices.getToken()}};return fetch(\"user/get\",opts).then(function(resp){if(resp.ok)return resp.json();throw new Error('could not find user');});}else{return'';}}","map":{"version":3,"names":["tokenServices","getUser","token","getToken","opts","headers","fetch","then","resp","ok","json","Error"],"sources":["/Users/danielkanczugowski/bolierplatetest/React-Flask_BoilerPlate/frontend/src/Api/userServices.js"],"sourcesContent":["import tokenServices from '../../src/Utils/tokenServices'\n\nexport function getUser(){\n    const token = tokenServices.getToken()\n    if(token){\n        const opts = {\n            headers: {\n                'Authorization' : 'Bearer ' + tokenServices.getToken()\n            }\n        }\n        return fetch(\"user/get\", opts)\n            .then((resp) =>{\n                if(resp.ok) return resp.json();\n                throw new Error('could not find user')\n            })\n    }else{\n        return ''\n    }\n}"],"mappings":"AAAA,MAAOA,cAAP,KAA0B,+BAA1B,CAEA,MAAO,SAASC,QAAT,EAAkB,CACrB,GAAMC,MAAK,CAAGF,aAAa,CAACG,QAAd,EAAd,CACA,GAAGD,KAAH,CAAS,CACL,GAAME,KAAI,CAAG,CACTC,OAAO,CAAE,CACL,gBAAkB,UAAYL,aAAa,CAACG,QAAd,EADzB,CADA,CAAb,CAKA,MAAOG,MAAK,CAAC,UAAD,CAAaF,IAAb,CAAL,CACFG,IADE,CACG,SAACC,IAAD,CAAS,CACX,GAAGA,IAAI,CAACC,EAAR,CAAY,MAAOD,KAAI,CAACE,IAAL,EAAP,CACZ,KAAM,IAAIC,MAAJ,CAAU,qBAAV,CAAN,CACH,CAJE,CAAP,CAKH,CAXD,IAWK,CACD,MAAO,EAAP,CACH,CACJ"},"metadata":{},"sourceType":"module"}